{"version":3,"file":"static/js/254.d06d5c1b.chunk.js","mappings":"0OAoCA,EA7Ba,WACT,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAMA,IAJAC,EAAAA,EAAAA,YAAU,WCPW,IAACC,KDQRN,ECPPO,EAAAA,GAAAA,IAAA,6CAAgDD,EAAhD,4BAHC,mCAGD,qBDOgBE,KAAKJ,EAC3B,GAAE,CAACJ,IAECG,EAIL,OACI,wBACKA,EAAUM,KAAKC,KAAKC,KAAI,SAAAD,GACrB,IAAQE,EAA2CF,EAA3CE,KAAMC,EAAqCH,EAArCG,UAAWC,EAA0BJ,EAA1BI,aAAcC,EAAYL,EAAZK,QACvC,OACI,UAAC,KAAD,WACKD,GAAgB,SAAC,KAAD,CAASE,IAAG,UApB7B,mDAoB6B,OAAuBF,GAAgBG,IAAKL,KAAa,SAAC,KAAD,CAASI,IAAI,sGAAsGC,IAAKL,KAC9M,4BACI,0BAAG,SAAC,KAAD,sBAAmB,uBAAIA,QAC1B,0BAAG,SAAC,KAAD,0BAAyBC,UAJrBE,EAQtB,KAGZ,C,oXEhCKG,EAAUC,EAAAA,GAAAA,OAAH,uNAUPC,EAAiBD,EAAAA,GAAAA,IAAH,4CAIdE,EAAiBF,EAAAA,GAAAA,IAAH,2CAIdG,EAAiBH,EAAAA,GAAAA,IAAH,gDAIdI,EAAQJ,EAAAA,GAAAA,GAAH,+FAKLK,EAAOL,EAAAA,GAAAA,EAAH,sBAEJM,EAAUN,EAAAA,GAAAA,GAAH,+FAIPO,EAAOP,EAAAA,GAAAA,KAAH,+FAKJQ,GAAoBR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,+QAejBU,EAAUV,EAAAA,GAAAA,IAAH,sFAMPW,EAAWX,EAAAA,GAAAA,GAAH,4GAQRY,EAA2BZ,EAAAA,GAAAA,EAAH,iD","sources":["components/MovieDetails/Cast.js","fetch/fetchCast.js","components/MovieDetails/MovieDetails.styled.js"],"sourcesContent":["import { fetchCast } from \"fetch/fetchCast\"\nimport { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { CastIMG, CastItem, Span } from \"./MovieDetails.styled\"\n\nconst posterStartPath = \"https://image.tmdb.org/t/p/w600_and_h900_bestv2\"\n\nconst Cast = () => {\n    const { movieId } = useParams()\n    const [movieCast, setMovieCast] = useState(null)\n\n    useEffect(() => {\n        fetchCast(movieId).then(setMovieCast)\n    }, [movieId])\n\n    if (!movieCast) {\n        return\n    }\n\n    return (\n        <ul>\n            {movieCast.data.cast.map(cast => {\n                const { name, character, profile_path, cast_id } = cast\n                return (\n                    <CastItem key={cast_id}>\n                        {profile_path ? (<CastIMG src={`${posterStartPath}${profile_path}`} alt={name} />) : (<CastIMG src=\"https://static8.depositphotos.com/1431107/919/i/600/depositphotos_9199988-stock-photo-oops-icon.jpg\" alt={name} />)}\n                        <div>\n                            <p><Span>Name: </Span><b>{name}</b></p>\n                            <p><Span>Character: </Span>{character}</p>\n                        </div>\n                    </CastItem>\n                )\n            })}\n        </ul>\n    )\n}\nexport default Cast","import axios from \"axios\"\n\nconst key = \"7cdf478795ad4657f8647bebd5408f4d\"\n\nexport const fetchCast = (id) => {\n    return axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${key}&language=en-US`)\n} ","import styled from \"styled-components\"\nimport {NavLink} from \"react-router-dom\"\n\nconst BackBTN = styled.button`\n    margin-bottom: 10px;\n    padding: 5px 30px;\n    color: blue;\n    box-shadow: blue 1px 1px 1px, blue 2px 2px 1px;\n    background-color: red;\n    border: none;\n    font-weight: 700;\n`\n\nconst MainDetailsBox = styled.div`\n    display: flex;\n`\n\nconst MainDetailsIMG = styled.img`\n    width: 200px;\n`\n\nconst TextDetailsBox = styled.div`\n    margin-left: 20px;\n`\n\nconst Title = styled.h2`\n    color: red;\n    text-shadow: blue 1px 1px 1px, blue 2px 2px 1px;\n`\n\nconst Text = styled.p``\n\nconst TopText = styled.h3`\n    color: black;\n    text-shadow: red 1px 1px 1px, red 2px 2px 1px;\n`\nconst Span = styled.span`\n    color: black;\n    text-shadow: red 1px 1px 1px, red 2px 2px 1px;\n`\n\nconst AdditionalNavLink = styled(NavLink)`\n    text-decoration: none;\n    font-weight: 700;\n    color: blue;\n\n    &.active {\n        color: red;\n        text-decoration: underline;\n    }\n\n    :hover:not(.active),\n    :focus-visible:not(.active) {\n        color: #9e9e9e;\n    }\n`\nconst CastIMG = styled.img`\n    width: 200px;\n    height: auto;\n    margin-right: 20px\n`\n\nconst CastItem = styled.li`\n    display: flex;\n\n    :not(:last-child) {\n        margin-bottom: 20px;\n    }\n`\n\nconst AdditionalReviewsContent = styled.p`\n    text-align: justify;\n`\n\nexport {BackBTN, MainDetailsBox, MainDetailsIMG, TextDetailsBox, Title, Text, TopText, Span, AdditionalNavLink, CastItem, CastIMG, AdditionalReviewsContent}"],"names":["movieId","useParams","useState","movieCast","setMovieCast","useEffect","id","axios","then","data","cast","map","name","character","profile_path","cast_id","src","alt","BackBTN","styled","MainDetailsBox","MainDetailsIMG","TextDetailsBox","Title","Text","TopText","Span","AdditionalNavLink","NavLink","CastIMG","CastItem","AdditionalReviewsContent"],"sourceRoot":""}